{"version":3,"sources":["index.ts"],"names":["plugin","VisionCameraProxy","initFrameProcessorPlugin","scanOCR","frame","params","Error","call"],"mappings":";;;;;;;AACA;;AADA;;AAuEA;AACA;AACA;AACA,MAAMA,MAAM,GAAGC,2CAAkBC,wBAAlB,CAA2C,SAA3C,CAAf;;AAEO,SAASC,OAAT,CAAiBC,KAAjB,EAA+BC,MAA/B,EAAuD;AAC5D;;AACA,MAAIL,MAAM,IAAI,IAAd,EAAoB;AAClB,UAAM,IAAIM,KAAJ,CACJ,oIADI,CAAN;AAGD;;AACD,MAAID,MAAJ,EAAY;AACV,WAAOL,MAAM,CAACO,IAAP,CAAYH,KAAZ,EAAmBC,MAAnB,CAAP;AACD,GAFD,MAEO;AACL,WAAOL,MAAM,CAACO,IAAP,CAAYH,KAAZ,CAAP;AACD;AACF","sourcesContent":["/* eslint-disable no-undef */\nimport { VisionCameraProxy, Frame } from 'react-native-vision-camera';\n\ntype BoundingFrame = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  boundingCenterX: number;\n  boundingCenterY: number;\n};\n\ntype BoundingBox = {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n};\n\ntype Point = { x: number; y: number };\n\ntype Symbol = {\n  text: string;\n  cornerPoints?: Point[];\n  frame?: BoundingFrame;\n  boundingBox?: BoundingBox;\n};\n\ntype TextElement = {\n  text: string;\n  frame?: BoundingFrame;\n  boundingBox?: BoundingBox;\n  cornerPoints?: Point[];\n  symbols?: Symbol[];\n};\n\ntype TextLine = {\n  text: string;\n  elements: TextElement[];\n  frame?: BoundingFrame;\n  boundingBox?: BoundingBox;\n  recognizedLanguages: string[];\n  cornerPoints?: Point[];\n  confidence: number;\n};\n\ntype TextBlock = {\n  text: string;\n  lines: TextLine[];\n  frame?: BoundingFrame;\n  boundingBox?: BoundingBox;\n  recognizedLanguages: string[];\n  cornerPoints?: Point[];\n};\n\ntype Text = {\n  text: string;\n  blocks: TextBlock[];\n};\n\nexport interface CropRegion{\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport type OCRFrame = {\n  result: Text;\n};\n\n/**\n * Scans OCR.\n */\nconst plugin = VisionCameraProxy.initFrameProcessorPlugin('scanOCR');\n\nexport function scanOCR(frame: Frame, params?: any): OCRFrame {\n  'worklet';\n  if (plugin == null) {\n    throw new Error(\n      'Failed to load Frame Processor Plugin \"scanOCR\"! Please check your dependencies and make sure that the plugin is linked correctly.'\n    );\n  }\n  if (params) {\n    return plugin.call(frame, params) as any;\n  } else {\n    return plugin.call(frame) as any;\n  }\n}\n\n"]}